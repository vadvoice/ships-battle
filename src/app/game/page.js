'use client';

import Battlefield from '@/components/Battlefield';
import GameSettings from '@/components/GameSettings';
import { GAME_STAGES, GAME_MODE } from '@/libs/config';
import { useEffect, useState } from 'react';

export default function Game() {
  const initialGameSetupState = {
    stage: GAME_STAGES.menu,
    player1: {},
    player2: {},
    mode: GAME_MODE.singlePlayer,
  };
  const [gameSetup, setGameSetup] = useState(initialGameSetupState);

  const onGameModeChange = (mode) => {
    setGameSetup({
      ...gameSetup,
      mode,
      stage: GAME_STAGES.planning,
    });
  };

  const onGameStart = () => {
    setGameSetup({
      ...gameSetup,
      stage: GAME_STAGES.ongoing,
    });
  };

  const onReset = () => {
    setGameSetup({
      ...gameSetup,
      stage: GAME_STAGES.menu,
    });
  };

  useEffect(() => {
    if (
      gameSetup.stage !== GAME_STAGES.ongoing &&
      gameSetup.player1.stage === GAME_STAGES.planningComplete &&
      gameSetup.player2.stage === GAME_STAGES.planningComplete
    ) {
      setGameSetup({
        ...gameSetup,
        stage: GAME_STAGES.ongoing,
      });
    }
  }, [gameSetup, gameSetup.player1.stage, gameSetup.player2.stage]);

  return (
    <div className="flex flex-1 flex-col items-center p-24 h-screen">
      <div className="mb-10">
        <h1 className="mb-4 text-xl font-extrabold text-gray-900 dark:text-white text-center">
          <span className="text-transparent bg-clip-text bg-gradient-to-r to-emerald-600 from-sky-400">
            Battle Ships
          </span>{' '}
          multiplayer
        </h1>
      </div>

      {[GAME_STAGES.planning, GAME_STAGES.ongoing].includes(gameSetup.stage) ? (
        <div className="w-full flex justify-around">
          <Battlefield
            position={1}
            actions={{ onChange: setGameSetup }}
            gameSetup={gameSetup}
          />

          <Battlefield
            position={2}
            autoGenerated
            actions={{ onChange: setGameSetup }}
            gameSetup={gameSetup}
          />
        </div>
      ) : null}

      <GameSettings
        gameSetup={gameSetup}
        actions={{
          onReset,
          onGameModeChange: onGameModeChange,
          onChange: setGameSetup,
          onGameStart: onGameStart,
        }}
      />
    </div>
  );
}
